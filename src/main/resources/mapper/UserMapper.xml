<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gydx.bookManager.mapper.UserMapper">
    <select id="selectByPage" parameterType="integer" resultType="com.gydx.bookManager.entity.User">
        select * from user where status = 1
        limit #{page}, #{limit};
    </select>
    <select id="selectByPageAndCondition" resultType="com.gydx.bookManager.entity.User">
        select * from user
        where
            <trim prefixOverrides="and|or">
                <if test="roleName != null and roleName != ''">
                    and id IN (select user_id from user_role where role_id = (select id from role where name = #{roleName}))
                </if>
                <if test="username != null and username != ''">
                    and username like concat('%', #{username}, '%')
                </if>
                <if test="nickname != null and nickname != ''">
                    and nickname like concat('%', #{nickname}, '%')
                </if>
                <if test="email != null and email != ''">
                    and email = #{email}
                </if>
                <if test="sex != null and sex != ''">
                    and sex = #{sex}
                </if>
                and status = 1
            </trim>
        limit #{page}, #{limit};
    </select>
    <select id="selectAllUserList" resultType="com.gydx.bookManager.entity.User">
        select * from user where status = 1;
    </select>
    <select id="selectAllByCondition" resultType="com.gydx.bookManager.entity.User">
        select * from user
        where
        <trim prefixOverrides="and|or">
            <if test="roleName != null and roleName != ''">
                and id IN (select user_id from user_role where role_id = (select id from role where name = #{roleName}))
            </if>
            <if test="username != null and username != ''">
                and username like concat('%', #{username}, '%')
            </if>
            <if test="nickname != null and nickname != ''">
                and nickname like concat('%', #{nickname}, '%')
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="sex != null and sex != ''">
                and sex = #{sex}
            </if>
            and status = 1
        </trim>
    </select>
    <select id="selectOneUser" parameterType="com.gydx.bookManager.entity.User" resultType="com.gydx.bookManager.entity.User">
        select * from user where username = #{username} and status = 1;
    </select>
    <update id="updateUser" parameterType="com.gydx.bookManager.pojo.UserInfoPojo">
        UPDATE USER u
        SET u.nickname = #{nickname},
         u.sex = #{sex},
         u.email = #{email};
    </update>
    <update id="updateOneUser" parameterType="com.gydx.bookManager.entity.User">
        update user set
        <if test="nickname != null and nickname != ''">
            nickname = #{nickname},
        </if>
        <if test="email != null and email != ''">
            email = #{email},
        </if>
        <if test="tel != null and tel != ''">
            tel = #{tel},
        </if>
        sex = #{sex}
        where id = #{id};
    </update>
    <update id="updatePassword">
        update user set password = #{password} where id = #{id};
    </update>
    <update id="deleteUsers" parameterType="com.gydx.bookManager.entity.User">
        update user set status = 0
        where id =
        <foreach collection="users" item="user" index="index" open="(" close=")" separator=",">
            #{user.id}
        </foreach>
    </update>
    <update id="deleteOneUser" parameterType="com.gydx.bookManager.entity.User">
        update user set status = 0 where id = #{id};
    </update>
    <update id="updateOneStatus" parameterType="com.gydx.bookManager.entity.User">
        update user set status = 1 where id = #{id};
    </update>
    <update id="updateUserByUsername" parameterType="com.gydx.bookManager.entity.User">
        update user set name = #{nickname}, status = 1 where username = #{username};
    </update>
    <update id="updateOneStatusByUsername" parameterType="string">
        update user set status = 1 where username = #{number};
    </update>
</mapper>